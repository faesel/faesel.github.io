{"version":3,"sources":["webpack:///./src/pages/blog.module.scss","webpack:///./src/pages/blog.js"],"names":["module","exports","BlogPage","data","pageTitle","breadcrumbList","name","url","className","blogStyles","pagetitle","posts","allContentfulBlog","edges","map","edge","index","blogInfo","title","node","datePublished","imageUrl","hero","file","imageAlt","description","bodym","childMarkdownRemark","excerpt","slug","timeToRead","key","post","to","posttitle","src","alt","tags","tag"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,MAAQ,4BAA4B,KAAO,2BAA2B,KAAO,2BAA2B,IAAM,0BAA0B,UAAY,gCAAgC,UAAY,kC,4ySCqFnMC,UA/EE,WACf,IAAMC,EAAI,OA2BV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,UAAU,OACVC,eAAgB,CACd,CACEC,KAAM,OACNC,IAAK,WAIX,0BAAMC,UAAWC,IAAWC,WAA5B,QACA,wBAAIF,UAAWC,IAAWE,OACvBR,EAAKS,kBAAkBC,MAAMC,KAAI,SAACC,EAAMC,GACvC,IAAMC,EAAW,CACfC,MAAOH,EAAKI,KAAKD,MACjBE,cAAeL,EAAKI,KAAKC,cACzBC,SAAS,SAAUN,EAAKI,KAAKG,KAAKC,KAAKhB,IACvCiB,SAAUT,EAAKI,KAAKG,KAAKJ,MACzBO,YAAaV,EAAKI,KAAKO,MAAMC,oBAAoBC,QACjDC,KAAMd,EAAKI,KAAKU,KAChBC,WAAYf,EAAKI,KAAKO,MAAMC,oBAAoBG,YAGlD,OACE,wBAAIC,IAAKf,EAAOR,UAAWC,IAAWuB,MACpC,kBAAC,OAAD,CAAMC,GAAE,SAAWhB,EAASY,MAC1B,0BAAMrB,UAAWC,IAAWyB,WAAYjB,EAASC,OACjD,2BACE,kBAAC,IAAD,CAAYA,MAAM,mBADpB,IACyCD,EAASG,cADlD,KAGE,kBAAC,IAAD,CAASF,MAAM,iBAHjB,IAGoCD,EAASa,WAH7C,YAKA,yBAAKK,IAAKlB,EAASI,SAAUe,IAAKnB,EAASO,WAC3C,2BAAIP,EAASQ,aACb,wBAAIjB,UAAWC,IAAW4B,MACvBtB,EAAKI,KAAKkB,KAAKvB,KAAI,SAACwB,EAAKtB,GAAN,OAClB,wBAAIe,IAAKf,EAAOR,UAAWC,IAAW6B,KACnCA","file":"component---src-pages-blog-js-ae673e9ba8789cd7c030.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"blog-module--posts--3uQTR\",\"post\":\"blog-module--post--2PWe7\",\"tags\":\"blog-module--tags--2s6YB\",\"tag\":\"blog-module--tag--3ryTs\",\"posttitle\":\"blog-module--posttitle--3J7xx\",\"pagetitle\":\"blog-module--pagetitle--3VWLU\"};","import React from \"react\"\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\nimport { FiCalendar, FiClock } from \"react-icons/fi\"\nimport Layout from \"../components/layout\"\nimport Head from \"../components/head\"\nimport blogStyles from \"./blog.module.scss\"\n\nconst BlogPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allContentfulBlog(sort: { fields: datePublished, order: DESC }) {\n        edges {\n          node {\n            title\n            tags\n            hero {\n              file {\n                url\n              }\n              title\n            }\n            slug\n            datePublished(formatString: \"MMMM Do, YYYY\")\n            bodym {\n              childMarkdownRemark {\n                timeToRead\n                excerpt(pruneLength: 300)\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Layout>\n      <Head\n        pageTitle=\"Blog\"\n        breadcrumbList={[\n          {\n            name: \"Blog\",\n            url: \"Blog\",\n          },\n        ]}\n      />\n      <span className={blogStyles.pagetitle}>Blog</span>\n      <ol className={blogStyles.posts}>\n        {data.allContentfulBlog.edges.map((edge, index) => {\n          const blogInfo = {\n            title: edge.node.title,\n            datePublished: edge.node.datePublished,\n            imageUrl: `https:${edge.node.hero.file.url}`,\n            imageAlt: edge.node.hero.title,\n            description: edge.node.bodym.childMarkdownRemark.excerpt,\n            slug: edge.node.slug,\n            timeToRead: edge.node.bodym.childMarkdownRemark.timeToRead,\n          }\n\n          return (\n            <li key={index} className={blogStyles.post}>\n              <Link to={`/blog/${blogInfo.slug}`}>\n                <span className={blogStyles.posttitle}>{blogInfo.title}</span>\n                <p>\n                  <FiCalendar title=\"Date Published\" /> {blogInfo.datePublished}\n                  &nbsp;&nbsp;\n                  <FiClock title=\"Reading Time\" /> {blogInfo.timeToRead} Minutes\n                </p>\n                <img src={blogInfo.imageUrl} alt={blogInfo.imageAlt}></img>\n                <p>{blogInfo.description}</p>\n                <ol className={blogStyles.tags}>\n                  {edge.node.tags.map((tag, index) => (\n                    <li key={index} className={blogStyles.tag}>\n                      {tag}\n                    </li>\n                  ))}\n                </ol>\n              </Link>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogPage\n"],"sourceRoot":""}